  <div className="  w-full h-full py-5 text-[1.2rem]">
      <h1 className="text-5xl font-bold text-[var(--Blue-950)] pb-3">
        Personal info
      </h1>
      <p className=" text-[var(--Grey-500)] pb-8">
        Please provide your name, email address, and phone number.
      </p>

      <form className=" flex flex-col" onSubmit={handleSubmit(onSubmit)}>
        <label>
          <p className=" text-[var(--Blue-950)] font-medium pb-2 flex justify-between">
            Name
            {errors.name && (
              <span className="text-[var(--Red-500)]">
                {errors.name.message}
              </span>
            )}
          </p>
          <input
            {...register("name")}
            className={`outline-none focus:border-[var(--Purple-600)] border-2 rounded-[.5rem] p-3 w-full border-[var(--Purple-200)] mb-4 ${
              errors.name ? "border-[var(--Red-500)]" : ""
            }`}
            type="text"
            placeholder="e.g. Stephen King"
          />
        </label>
        <label htmlFor="">
          <p className=" text-[var(--Blue-950)] font-medium pb-2 flex justify-between">
            Email Address
            {errors.email && (
              <span className="text-[var(--Red-500)]">
                {errors.email.message}
              </span>
            )}
          </p>

          <input
            {...register("email")}
            className={`outline-none focus:border-[var(--Purple-600)] border-2 rounded-[.5rem] p-3 w-full border-[var(--Purple-200)] mb-4 ${
              errors.email ? "border-[var(--Red-500)]" : ""
            } `}
            type="email"
            placeholder="e.g. stephenking@lorem.com"
          />
        </label>
        <label htmlFor="">
          <p className=" text-[var(--Blue-950)] font-medium pb-2 flex justify-between">
            Phone Number{" "}
            {errors.number && (
              <span className="text-[var(--Red-500)]">
                {errors.number.message}
              </span>
            )}
          </p>

          <input
            {...register("number")}
            className={`outline-none focus:border-[var(--Purple-600)] border-2 rounded-[.5rem] p-3 w-full border-[var(--Purple-200)] mb-4 ${
              errors.number ? "border-[var(--Red-500)]" : ""
            } `}
            type="number"
            placeholder="e.g. +1 234 567 890"
          />
        </label>
  
      </form>
    </div>

    ///app
    import "./App.css";
// import { useState } from "react";
import PresonalInfo from "./components/Personal-Info";
import { useMultistepForm } from "./useMutisStepForm";
import SelectPlan from "./components/Select-Plan";
import type { FormEvent } from "react";

function App() {
  const {
    
    currentStepIndex,
    step,
    steps,
    back,
    nextStep,
    isFirstStep,
    isLastStep,
  } = useMultistepForm([
    <PresonalInfo />,
    <SelectPlan />,
    <div>three</div>,
    <div>foure</div>,
  ]);


  
console.log(currentStepIndex);

//   const [checks, setChecks] = useState([false, false, false, false]);


// const updatedChecks = checks.map((_, i) => i <= currentStepIndex);
// setChecks(updatedChecks);


function onSubmit(e: FormEvent){
  e.preventDefault()
  nextStep()
}


  return (
    <div className=" w-full  rounded-2xl flex items-center justify-between  p-5 max-w-[75%] bg-[var(--White)]  ">
      <div className="relative z-10  pl-7 pt-7 back-img">
        <ul className="text-[var(--White)] flex flex-col gap-7">
          {["YOUR INFO", "SELECT PLAN", "ADD-ONS", "SUMMARY"].map(
            (item, index) => (
              <li
                key={index}
                className=" cursor-pointer flex gap-5 items-center"
                // onClick={() => handleOption(item, index)}
              >
                <span
                  className={`   w-9 h-9 p-[.2rem] font-medium text-center rounded-[50%]  border-1 text-xl bab 
                
            
                 `}
                >
                  {index + 1}
                </span>
                <div className="flex flex-col ">
                  <span className="text-[var(--Grey-500)] font-medium text-[.7rem] ">
                    STEP {index + 1}
                  </span>
                  <span className="font-medium tracking-wider text-[1rem] ">
                    {item}
                  </span>
                </div>
              </li>
            )
          )}
        </ul>
      </div>

      <div className=" w-[60%] h-full min-h-[35rem]">
        {/* <PresonalInfo /> */}
        {/* <SelectPlan/> */}
        <form onSubmit={onSubmit} className=" flex flex-col w-[80%] h-full text-xl">

<div>{currentStepIndex + 1} / {steps.length}</div>

{step}



          <div className="mt-auto flex  items-center justify-between">
            {!isFirstStep && (
              <button
                onClick={back}
                type="submit"
                className="  text-[1.2rem] text-[var(--Grey-500)]"
              >
                Back
              </button>
            )}
            <button
              onClick={nextStep}
              type="button"
              className=" cursor-pointer bg-[var(--Blue-950)] text-[1rem] hover:bg-[var(--Purple-600)] py-2 px-4 text-[var(--White)] rounded-[.3rem] ml-auto  "
            >
              {isLastStep ? "Confirm" : "Next Step"}
            </button>
          </div>
        </form>
      </div>
    </div>
  );
}

export default App;

    // ${checks[index] ? "style-if-checked" : ""}



    //info

    import FormWrapper from "./FormWrapper";


function PersonalInfo() {
  return (
    <FormWrapper
      title="Personal info"
      description="Please provide your name, email address, and phone number"
    >
      <div className="form-group flex  flex-col gap-2">
        <label htmlFor="name">Name</label>
        <input className="p-4 border-2 rounded-[.5rem] text-[var(--Purple-200)] "  minLength={5}  required   id="name" name="name" type="text" placeholder="e.g. Stephen King" />
      </div>

      <div className="form-group flex  flex-col gap-2">
        <label htmlFor="email">Email</label>
        <input className="p-4 border-2 rounded-[.5rem] text-[var(--Purple-200)] "   required  id="email" name="email" type="email" placeholder="e.g. stephenking@lorem.com" />
      </div>

      <div className="form-group flex  flex-col gap-2">
        <label htmlFor="phone">Phone</label>
        <input className="p-4 border-2 rounded-[.5rem] text-[var(--Purple-200)] " min={10} required  id="phone" name="phone" type="tel" placeholder="e.g. +1 234 567 890" />
      </div>
    </FormWrapper>
  );
}

export default PersonalInfo;

